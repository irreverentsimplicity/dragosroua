---
import PostLayout from '../layouts/PostLayout.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import OptimizedImage from '../components/OptimizedImage.astro';
import { getAllPosts, getAllPages, getSlugFromUri } from '../lib/wordpress';
import { makeLinksRelative, generateImageAltText, updateWordPressImageUrls } from '../lib/utils';

export async function getStaticPaths() {
  console.log('\nðŸ”¨ Building all content...\n');
  
  const [posts, pages] = await Promise.all([
    getAllPosts(),
    getAllPages()
  ]);
  
  // Filter out the homepage from pages (we handle it separately)
  const pagesWithoutHome = pages.filter(page => page.slug !== '22416-2');
  
  const allContent = [...posts, ...pagesWithoutHome];
  
  console.log(`\nðŸ“„ Generating ${allContent.length} static pages\n`);
  
  // Sort posts by date for navigation (newest first)
  const sortedPosts = posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
  
  return allContent.map(item => {
    const slug = getSlugFromUri(item.uri);
    const isPost = posts.some(p => p.id === item.id);
    
    // Calculate next/previous posts for blog posts only
    let nextPost = null;
    let previousPost = null;
    
    if (isPost) {
      const currentIndex = sortedPosts.findIndex(p => p.id === item.id);
      if (currentIndex > 0) {
        nextPost = {
          title: sortedPosts[currentIndex - 1].title,
          uri: sortedPosts[currentIndex - 1].uri
        };
      }
      if (currentIndex < sortedPosts.length - 1) {
        previousPost = {
          title: sortedPosts[currentIndex + 1].title,
          uri: sortedPosts[currentIndex + 1].uri
        };
      }
    }
    
    console.log(`  â†’ /${slug} (${isPost ? 'post' : 'page'})`);
    
    return {
      params: { slug: slug || undefined },
      props: { 
        content: item, 
        isPost,
        nextPost,
        previousPost
      }
    };
  });
}

const { content, isPost, nextPost, previousPost } = Astro.props;

// Use PostLayout for posts (includes iOS ad + Substack)
// Use BaseLayout for pages (cleaner, for product tables)
---

{isPost ? (
  <PostLayout post={content} nextPost={nextPost} previousPost={previousPost} />
) : (
  <BaseLayout 
    title={content.seo?.title || content.title}
    description={content.seo?.metaDesc || ''}
    ogImage={updateWordPressImageUrls(content.seo?.opengraphImage?.sourceUrl || content.featuredImage?.node?.sourceUrl) || '/images/default-featured-1200-630.png'}
    canonical={content.seo?.canonical || `https://dragosroua.com${content.uri}`}
    schema={content.seo?.schema?.raw}
  >
    <article class="page">
      <h1 set:html={content.title} />
      
      {content.featuredImage?.node?.sourceUrl && (
        <OptimizedImage
          src={updateWordPressImageUrls(content.featuredImage.node.sourceUrl)}
          alt={generateImageAltText(content.featuredImage.node, content.title)}
          width={800}
          height={533}
          class="hero-image"
          loading="eager"
          sizes="(max-width: 768px) 100vw, 800px"
          widths={[380, 600, 800, 1200]}
        />
      )}
      
      <div class="wp-content" set:html={makeLinksRelative(content.content)} />
    </article>
  </BaseLayout>
)}